/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head.next == null || head == null)
            return null;
        ListNode temp = head;
        int length = 0;
        while(temp != null) {
            length++;
            temp = temp.next;
        }
        temp = head;
        int point = length - n;
        if (point == 0)
            return head.next;
        int i = 0;
        for(temp = head ; temp != null; temp=temp.next) {
            if(i==(point-1)) {
                temp.next = temp.next.next;
                break;
            }
            i++;
        }
        return head;
    }
}
       
      
